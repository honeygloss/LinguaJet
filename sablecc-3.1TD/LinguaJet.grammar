// LinguaJet.grammar
// SableCC grammar for decaf, a subset of Java.
// March 2003, sdb

Package LinguaJet;

Helpers // Examples
  letter = ['a'..'z'] | ['A'..'Z'] ;             // w
  digit = ['0'..'9'] ;                           // 3
  digits = digit+ ; 				// 2040099
  exp = ['e' + 'E'] ['+' + '-']? digits;         // E-34
  newline = [10 + 13] ; 				// '\n'
  non_star = [[0..0xffff] - '*'] ;               // /
  non_slash = [[0..0xffff] - '/'];               // *
  non_star_slash = [[0..0xffff] - ['*' + '/']];  // $
Tokens
  comment1 = '//' [[0..0xffff]-newline]* newline ;
  comment2 = '/*' non_star* '*'  (non_star_slash non_star* '*'+)* '/' ;
  space = ' ' | 9 | newline ; // 9 = tab
  clas = 'classe' | 'kelas' | 'varg' ;                // key words (reserved)
  public = 'public' | 'publik' | 'sarvajanik' ;
  static = 'statique' | 'statik' | 'sthir' ;
  void = 'vide' | 'kosong' | 'reekt' ;
  main = 'principal' | 'utama' | 'mukhya' ;
  string = 'String' | 'teks' | 'string' ;
  int = 'entier' | 'bilangan' | 'purnank' ;
  float = 'flottant' | 'angka' | 'float' ;
  for = 'pour' | 'untuk' | 'ke liye' ;
  while = 'tant_que' | 'selama' | 'jab tak' ;
  if = 'si' | 'jika' | 'yadi' ;
  else = 'sinon' | 'lain' | 'anyatha' ; 
  assign = '=' ;
  compare = '==' | '<' | '>' | '<=' | '>=' | '!=' ;
  plus = '+' ;
  minus = '-' ;
  mult = '*' ;
  div = '/' ;
  l_par = '(' ;
  r_par = ')' ;
  l_brace = '{' ;
  r_brace = '}' ;
  l_bracket = '[' ;
  r_bracket = ']' ;
  comma = ',' ;
  semi = ';' ;
  identifier = letter (letter | digit | '_')* ;
  number = (digits '.'? digits? | '.'digits) exp? ;
  misc = [0..0xffff] ;

